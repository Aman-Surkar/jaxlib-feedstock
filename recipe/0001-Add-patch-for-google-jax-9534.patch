From c4ffa583083c5606b47a57fb5dd59d6a96d8c89b Mon Sep 17 00:00:00 2001
From: "Uwe L. Korn" <uwe.korn@quantco.com>
Date: Tue, 15 Feb 2022 13:58:11 +0100
Subject: [PATCH] Add patch for google/jax#9534

---
 WORKSPACE                                     |  4 ++
 ...85fc6096e06f7cb3678871adcff3279b7dec.patch | 44 +++++++++++++++++++
 2 files changed, 48 insertions(+)
 create mode 100644 jaxlib/d0c885fc6096e06f7cb3678871adcff3279b7dec.patch

diff --git a/WORKSPACE b/WORKSPACE
index 62d3589..2f0a404 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -12,6 +12,10 @@ http_archive(
     urls = [
         "https://github.com/tensorflow/tensorflow/archive/e662039f98d2b6a0d8242887d0881bae04e2d590.tar.gz",
     ],
+    patch_args = ["-p1"],
+    patches = [
+        "@//jaxlib:d0c885fc6096e06f7cb3678871adcff3279b7dec.patch",
+    ]
 )
 
 # For development, one can use a local TF repository instead.
diff --git a/jaxlib/d0c885fc6096e06f7cb3678871adcff3279b7dec.patch b/jaxlib/d0c885fc6096e06f7cb3678871adcff3279b7dec.patch
new file mode 100644
index 0000000..cbe5b82
--- /dev/null
+++ b/jaxlib/d0c885fc6096e06f7cb3678871adcff3279b7dec.patch
@@ -0,0 +1,44 @@
+From d0c885fc6096e06f7cb3678871adcff3279b7dec Mon Sep 17 00:00:00 2001
+From: Peter Hawkins <phawkins@google.com>
+Date: Mon, 14 Feb 2022 11:09:26 -0800
+Subject: [PATCH] [JAX] Add an explicit std::string cast to work around an
+ ABSL/protobuf compatibility problem.
+
+Issue https://github.com/google/jax/issues/9534
+
+PiperOrigin-RevId: 428559170
+Change-Id: I978c026da4179fa850c460541efb11600e891072
+---
+ .../compiler/xla/python/pprof_profile_builder.cc     | 12 ++++++++++--
+ 1 file changed, 10 insertions(+), 2 deletions(-)
+
+diff --git a/tensorflow/compiler/xla/python/pprof_profile_builder.cc b/tensorflow/compiler/xla/python/pprof_profile_builder.cc
+index e1a663e32c50a..225d02e6c2260 100644
+--- a/tensorflow/compiler/xla/python/pprof_profile_builder.cc
++++ b/tensorflow/compiler/xla/python/pprof_profile_builder.cc
+@@ -68,7 +68,11 @@ StatusOr<pybind11::bytes> JsonToPprofProfile(std::string json) {
+   tensorflow::tfprof::pprof::Profile profile;
+   auto status = tensorflow::protobuf::util::JsonStringToMessage(json, &profile);
+   if (!status.ok()) {
+-    return InvalidArgument("JSON parsing failed: %s", status.message());
++    // TODO(phawkins): the explicit `std::string` cast here is to work around
++    // https://github.com/google/jax/issues/9534 which appears to be an ABSL and
++    // protobuf version compatibility problem.
++    return InvalidArgument("JSON parsing failed: %s",
++                           std::string{status.message()});
+   }
+   return py::bytes(profile.SerializeAsString());
+ }
+@@ -80,7 +84,11 @@ StatusOr<std::string> PprofProfileToJson(py::bytes binary_proto) {
+   auto status =
+       tensorflow::protobuf::util::MessageToJsonString(profile, &output);
+   if (!status.ok()) {
+-    return InvalidArgument("JSON printing failed: %s", status.message());
++    // TODO(phawkins): the explicit `std::string` cast here is to work around
++    // https://github.com/google/jax/issues/9534 which appears to be an ABSL and
++    // protobuf version compatibility problem.
++    return InvalidArgument("JSON printing failed: %s",
++                           std::string{status.message()});
+   }
+   return output;
+ }
-- 
2.32.0 (Apple Git-132)

